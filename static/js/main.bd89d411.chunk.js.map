{"version":3,"sources":["calc.worker.js","tBalls.js","RightSide.js","GravCanvas.js","GravitySim.js","App.js","reportWebVitals.js","index.js"],"names":["Worker_fn","Worker","__webpack_public_path__","Vector","require","Balls","G","numThreads","makeThreads","i","threadPool","push","MyWorker","addBall","ballData","pos","x","y","vel","Vx","Vy","currBallIdx","initData","length","mass","color","ballIdx","nextData","getBalls","editBallLocation","idx","locData","data","updateBallData","editBallVelocity","initPos","ballDataVector","subtract","resetBallLocations","changeMass","newMass","clearBallsList","moveBallSteps","step","tempData","forEach","ball","ballNum","tempOneBallData","applyForce","f","calcNetForce","massVect","divide","multiplyScalar","sizeTimestep","newVel","newPos","add","deltaPos","info","netForce","dataIdx","f2Add","calcOneForce","ballData1","ballData2","s2","distanceSq","b2Copy","copy","fVector","normalize","this","ballsList","currTimestep","numTimesteps","worker","RightSide","props","animationInfo","buttonStyle","height","fontSize","borderStyle","borderColor","marginBottom","id","style","display","flexDirection","marginLeft","htmlFor","name","onChange","selectNumberBalls","disabled","running","value","className","onClick","startHandler","reset","type","toggleTraces","width","map","ballInfo","marginTop","handleChangeMass","min","max","placeholder","textAlign","position","bottom","GravCanvas","drawArrows","ctx","canvasRef","current","getContext","locations","location","Math","sqrt","save","translate","rotate","angleBetweenPoints","PI","p","Path2D","moveTo","lineTo","closePath","stroke","fill","arrows","restore","V","atan2","addBallEventListeners","canvas","allowDragging","ballLocs","addEventListener","e","preventDefault","stopPropagation","arrow","isPointInPath","offsetX","offsetY","arrowDetectSelect","setState","draggingVectorIdx","isVectorDragging","circles","circle","isDragging","whichBall","state","mouseInfo","getMousePos","handleDragDrop","handleVectorDrag","showBall","m","r","arc","round","fillStyle","backGround","clearRect","listeners","dragOk","receivedLocs","React","createRef","document","getElementById","clientWidth","clientHeight","traces","evt","rect","getBoundingClientRect","clientX","left","clientY","top","ref","border","backgroundColor","Component","GravitySim","updateAnimationState","rAF","requestAnimationFrame","b","balls","target","setInitBallInfoState","stopStart","postMessage","terminate","event","awaitingData","initPositions","resetPositionsToInit","valueAsNumber","parseInt","showTraces","console","log","cancelAnimationFrame","Fragment","handleVectorDown","App","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bd89d411.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/calc.worker.c00cd5d9.worker.js\");\n}\n","import MyWorker from './calc.worker'\nlet Vector = require('victor');\n\nexport class Balls {\n  constructor(G, numThreads = 1) {\n    this.ballsList = []\n    this.G = G\n    this.numThreads = numThreads\n    this.currTimestep = 0\n    this.numTimesteps = 0\n    this.sizeTimestep = .000015\n    this.initData = []\n    this.nextData = []\n    this.threadPool = []\n    // this.makeThreads(numThreads)\n    this.dataIdx = 0\n    this.worker = new MyWorker()\n  }\n\n  makeThreads = (numThreads) => {\n    for (let i = 0; i < numThreads; i++) {\n      this.threadPool.push(new MyWorker())\n    }\n  }\n\n  addBall = (ballData) => {\n    let pos = new Vector(ballData.x, ballData.y)\n    let vel = new Vector(ballData.Vx, ballData.Vy)\n    let currBallIdx = this.initData.length\n    ballData = {pos: pos, vel: vel, mass: ballData.mass, color: ballData.color, ballIdx: currBallIdx}\n    this.initData.push(ballData)\n    this.nextData.push(ballData)\n  }\n\n  getBalls = () => {\n    return [...this.nextData]\n  }\n\n  editBallLocation = (idx, locData) => {\n    let data = this.initData[idx]\n    if (data.pos) {\n      data.pos.x = locData.x\n      data.pos.y = locData.y\n    }\n    this.nextData = [...this.initData]\n  }\n\n  updateBallData = (data) => {\n    this.initData = [...data]\n    this.nextData = [...data]\n  }\n\n  editBallVelocity = (idx, ballData) => {\n    if (ballData) {\n      let data = this.initData[idx]\n      // Get the new length of the vector and set that as V, and save Vx and Vy components\n\n      let initPos = new Vector(data.pos.x, data.pos.y)\n      let ballDataVector = new Vector(ballData.x, ballData.y)\n\n      ballDataVector.subtract(initPos)\n      data.vel.x = ballDataVector.x\n      data.vel.y = ballDataVector.y\n      this.nextData = [...this.initData]\n    }\n  }\n\n  resetBallLocations = data => {\n    this.initData = [...data]\n    this.nextData = [...data]\n  }\n\n  changeMass = (newMass, idx) => {\n    this.initData[idx].mass = newMass\n    this.nextData[idx].mass = newMass\n  }\n  clearBallsList = () => {\n    this.initData = []\n    this.nextData = []\n  }\n\n  moveBallSteps = () => {\n    // let startTime = performance.now();\n    // this.worker.postMessage(1);\n    // this.worker.addEventListener('message', event => {console.log('worker response:', event)});\n    // let iterateEachInTurn = []\n    // let dataToWrite = []\n    for (let step = 0; step < 10000; step++) {\n      let tempData = []\n      this.initData.forEach((ball, ballNum) => {\n        let tempOneBallData = this.applyForce(ball)\n        tempData[ballNum] = tempOneBallData\n      })\n      this.initData = tempData\n    }\n    // this.nextData = this.initData\n    // let endTime = performance.now();\n    // var timeDiff = endTime - startTime;\n    // console.log(timeDiff + \" ms 2\");\n    return this.initData\n  }\n\n  applyForce = (ballData) => {\n    // RE-think\n    let f = this.calcNetForce(ballData.ballIdx)\n\n    let massVect = new Vector(ballData.mass, ballData.mass)\n    f.divide(massVect)\n\n    f.multiplyScalar(this.sizeTimestep)\n    // create new vel and pos vectors and push them into history\n    let newVel  = new Vector(ballData.vel.x, ballData.vel.y)\n    let newPos = new Vector(ballData.pos.x, ballData.pos.y)\n    /*\n    a = vf - vo / t\n    vf = at + vo\n     */\n\n    newVel.add(f)\n\n    let deltaPos = new Vector(newVel.x, newVel.y)\n    deltaPos.multiplyScalar(this.sizeTimestep)\n    /*\n    v = xf - xo / t\n    xf = vt + xo\n     */\n\n    newPos.add(deltaPos)\n    let data = {pos: newPos, vel: newVel, mass: ballData.mass, color: ballData.color, ballIdx: ballData.ballIdx}\n    return data\n  }\n\n  calcNetForce = (idx) => {\n    // add a row to the history\n    let info = this.initData\n\n    let netForce = new Vector(0,0)\n\n    info.forEach((ballData, dataIdx) => {\n      if (idx !== dataIdx) {\n        let f2Add = this.calcOneForce(info[idx], info[dataIdx])\n        netForce.add(f2Add)\n      }\n    })\n    return netForce\n  }\n\n  calcOneForce = (ballData1, ballData2) => {\n    // given which ball (e.g. ball1, ball2....) by index (0, 1, 2...)\n    // so we can get their mass and maybe look up other properties later if we need.\n    let s2 = ballData1.pos.distanceSq(ballData2.pos)\n\n    let f = (this.G * ballData1.mass * ballData2.mass) / (s2 + 0.2 * s2)\n    if (s2 < 5) {\n      f = 0\n    }\n    let b2Copy = {}\n    b2Copy.pos = new Vector(0,0)\n    b2Copy.pos.copy(ballData2.pos)\n    let fVector = b2Copy.pos.subtract(ballData1.pos)\n    fVector.normalize()\n    fVector.multiplyScalar(f)\n    return fVector\n  }\n}\n","import React from 'react'\nconst RightSide = props => {\n  const { animationInfo } = props\n  let buttonStyle = {height: 30, fontSize: 20, borderStyle: 'solid', borderColor: 'black', marginBottom: 15}\n  return (\n    <div id='rightSide' style={{ display: 'flex', flexDirection: 'column', marginLeft: 15}}>\n      <h2 id='rightSideHeader'>\n        Set up Sim\n      </h2>\n      <div id='addRemoveButtons' style={{ display: 'flex', flexDirection: 'column' }}>\n        <label htmlFor=\"numBallSelect\" style={{marginBottom: 5}}>Select number of objects:</label>\n\n        <select\n          name=\"Number\"\n          id=\"numBallSelect\"\n          onChange={props.selectNumberBalls}\n          disabled={props.running}\n          style={{marginBottom: 15, height: 30, fontSize: 20}}\n        >\n          <option value='select...'>Select...</option>\n          <option value='1'>One</option>\n          <option value=\"2\">Two</option>\n          <option value=\"3\">Three</option>\n          <option value=\"4\">Four</option>\n        </select>\n        <button\n          className='ballsButton'\n          onClick={props.startHandler}\n          disabled={!props.animationInfo.length}\n          style={buttonStyle}\n        >\n          {props.running ? \"Stop\" : \"Start\"}\n        </button>\n        <button\n          className='ballsButton'\n          onClick={props.reset}\n          disabled={props.running}\n          style={buttonStyle}>\n          Reset\n        </button>\n        <div>\n        <input type='checkbox' id='traceBox' name='traceBox' value='traces' onChange={props.toggleTraces} style={{width: 20, height: 20}}/>\n          <label htmlFor='traceBox'>Show Traces</label>\n        </div>\n        <div id='mass-section'>\n          {props.animationInfo.map((ballInfo, idx) => {\n            return(\n              <div key={`$mass${idx}key`}>\n                <div style={{marginTop: 20, fontSize: 16, marginBottom: 5}}>\n                  <label htmlFor={`mass${idx}`} >Mass for object {idx + 1}</label>\n                </div>\n                <div style={{marginBottom: 20}}>\n                  <input onChange={props.handleChangeMass} type=\"number\" id={`massEntry${idx}`} name={`${idx}`}\n                         min=\"1\" max=\"1000\" placeholder={`${ballInfo.mass}`} style={{width: 100, height: 30, fontSize: 17, textAlign: 'center'}}/>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <div style={{position: 'absolute', bottom: 100, width: 200}}>\n        Drag masses and vectors to edit starting conditions.\n      </div>\n    </div>\n\n  )\n}\n\nexport default RightSide\n","import React from 'react'\n\nclass GravCanvas extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      listeners: [],\n      isDragging: false,\n      whichBall: null,\n      dragOk: false,\n      receivedLocs: false,\n\n    }\n    this.canvasRef = React.createRef();\n    this.circles = []\n    this.arrows = []\n    this.ballLocs = []\n  }\n\n  componentDidMount() {\n    this.canvasRef.current.width = document.getElementById('canvasContainer').clientWidth * 0.8\n    this.canvasRef.current.height = document.getElementById('canvasContainer').clientHeight\n    // this.addBallEventListeners()\n  }\n\n  componentDidUpdate() {\n    const { locations } = this.props\n\n    this.ballLocs = [...locations]\n    if (!this.props.traces) {\n      this.backGround()\n    }\n    locations.forEach((ball, idx) => {\n      this.showBall(ball.pos.x, ball.pos.y, ball.mass, idx, ball.color)\n    })\n    this.drawArrows()\n    if (locations.length && !this.state.receivedLocs) {\n      this.setState({receivedLocs: true}, () => {\n        this.addBallEventListeners()\n      })\n    }\n  }\n\n  drawArrows = () => {\n    // Maybe if I can return the arrows themselves?  I think I need to be able to test against the context when\n    // things have been rotated and translated - which isn't the ctx when we're doing the test.\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { running, locations } = this.props\n    let width = 10\n    if (!running) {\n      locations.forEach((location, idx) => {\n        let height = Math.sqrt(location.vel.x ** 2 + location.vel.y ** 2)\n        let pos = location.pos\n        let vel = location.vel\n        ctx.save()\n        ctx.translate(pos.x, pos.y)\n        ctx.rotate(this.angleBetweenPoints(vel) * Math.PI / 180)\n        ctx.translate(-pos.x, -pos.y)\n        let p = new Path2D()\n        p.moveTo(-width / 2 + pos.x, 0 + pos.y + 5)\n        p.lineTo(width / 2 + pos.x, 0 + pos.y + 5)\n        p.lineTo(width / 2 + pos.x,height + pos.y+ 5)\n        p.lineTo(width / 2 +10 + pos.x, height + pos.y+5)\n        p.lineTo(0 + pos.x, height + 20 + pos.y+5)\n        p.lineTo(0 - width / 2 - 10 + pos.x, height + pos.y+5)\n        p.lineTo(-width / 2 + pos.x, height + pos.y+5)\n        p.closePath()\n        ctx.stroke(p)\n        ctx.fill(p)\n        this.arrows[idx] = p\n        ctx.restore()\n      })\n    }\n  }\n\n  angleBetweenPoints = (V) => {\n    // Canvas uses a different rotation about origin\n    return Math.atan2(V.y, V.x) * 180 / Math.PI - 90;\n  }\n\n  addBallEventListeners = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { running, allowDragging } = this.props\n    let locations = this.ballLocs\n\n    let arrowDetectSelect = (location, idx, e) => {\n      // Takes in locations of the balls and changes the context to the appropriately translated / rotated one\n      // before looking at collision detection\n      let arrow = this.arrows[idx]\n      let pos = location.pos\n      let vel = location.vel\n      // The arrows don't know their own canvas context (translate, rotate, etc)\n      ctx.save()\n      ctx.translate(pos.x, pos.y)\n      ctx.rotate(this.angleBetweenPoints(vel) * Math.PI / 180)\n      ctx.translate(-pos.x, -pos.y)\n      if (ctx.isPointInPath(arrow, e.offsetX, e.offsetY)) {\n        ctx.restore()\n        return true\n      }\n      ctx.restore()\n      return false\n    }\n\n\n    let handleMouseDown = (e) => {\n      if (running) {\n        return\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      locations.forEach((location, idx) => {\n        // Edit the context here and wrap the test in context switch - then return to normal after\n        if (arrowDetectSelect(location, idx, e)) {\n          this.setState({draggingVectorIdx: idx, isVectorDragging: true,})\n        }\n      })\n\n      // See if we're inside any circles:\n      this.circles.forEach((circle, idx) => {\n        if (ctx.isPointInPath(circle, e.offsetX, e.offsetY)) {\n          this.setState({isDragging: true, whichBall: idx})\n        }\n      })\n    }\n\n    let handleMouseUp = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({isDragging: false, whichBall: null, isVectorDragging: false, draggingVectorIdx: null})\n    }\n\n    let handleMouseMove = (e) => {\n      if (!running && this.state.isDragging) {\n        e.preventDefault();\n        e.stopPropagation();\n        let mouseInfo = this.getMousePos(e)\n        this.props.handleDragDrop(mouseInfo, this.state.whichBall)\n      } else if (!running && this.state.isVectorDragging) {\n        let mouseInfo = this.getMousePos(e)\n        this.props.handleVectorDrag(mouseInfo, this.state.draggingVectorIdx)\n      }\n    }\n    if (!running && allowDragging) {\n      canvas.addEventListener('mousedown', handleMouseDown)\n      canvas.addEventListener('mouseup', handleMouseUp)\n      canvas.addEventListener('mousemove', handleMouseMove)\n    }\n  }\n\n  showBall = (x, y, m, idx, color) => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    // Create circle\n    const circle = new Path2D();\n    let r\n    if (m > 800) {\n      r = 15\n    } else if (m > 600) {\n      r = 12\n    } else if (m > 400) {\n      r = 10\n    } else if (m > 100) {\n      r = 8\n    } else {\n      r = 6\n    }\n    circle.arc(Math.round(x), Math.round(y), r, 0, 2 * Math.PI);\n    ctx.fillStyle = color;\n    ctx.fill(circle);\n    this.circles[idx] = circle\n  }\n\n  getMousePos(evt) {\n    const canvas = this.canvasRef.current;\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  }\n\n  backGround = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  }\n  render() {\n    return (\n      <canvas ref={this.canvasRef} style={{border:1, borderStyle: \"solid\", backgroundColor: 'MidnightBlue'}}/>\n    )\n  }\n}\n\nexport default GravCanvas\n","import React from 'react'\n\nimport {Balls} from './tBalls'\nimport RightSide from \"./RightSide\";\nimport GravCanvas from './GravCanvas'\nimport MyWorker from './calc.worker'\n\nclass GravitySim extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationInfo: [],\n      running: false,\n      showTraces: false,\n      allowDragging: true,\n      isDragging: false,\n      initPositions: [],\n      draggingVectorIdx: false,\n      isVectorDragging: false,\n      awaitingData: false,\n    }\n    this.balls = new Balls(400)\n    this.worker = new MyWorker()\n  }\n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\n    this.worker.addEventListener('message', event => {\n      this.setState({\n        animationInfo: event.data,\n        awaitingData: false,\n      })\n    })\n    console.log('Basic worker version')\n  }\n\n  updateAnimationState = () => {\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF);\n    this.worker.terminate()\n  }\n\n  selectNumberBalls = (e) => {\n    let b = this.balls\n    b.clearBallsList()\n    switch (e.target.value) {\n      case '1':\n        b.addBall({x: 500, y: 500, Vx: 0, Vy: 1, mass: 1000, color: 'yellow'})\n        break;\n      case '2':\n        b.addBall({x: 500, y: 500, Vx: 0, Vy: -20, mass: 1000, color: 'yellow'})\n        b.addBall({x: 50, y: 500, Vx: 0, Vy: -25, mass: 20, color: 'aqua'})\n        break;\n      case '3':\n        b.addBall({x: 500, y: 500, Vx: 0, Vy: 1, mass: 1000, color: 'yellow'})\n        b.addBall({x: 870, y: 500, Vx: 0, Vy: -25, mass: 20, color: 'aqua'})\n        b.addBall({x: 890, y: 500, Vx: 0, Vy: -10, mass: 1, color: 'springGreen'})\n        break;\n      case '4':\n        b.addBall({x: 500, y: 500, Vx: 0, Vy: 1, mass: 1000, color: 'yellow'})\n        b.addBall({x: 870, y: 500, Vx: 0, Vy: -25, mass: 20, color: 'aqua'})\n        b.addBall({x: 890, y: 500, Vx: 0, Vy: -10, mass: 1, color: 'springGreen'})\n        b.addBall({x: 250, y: 200, Vx: 5, Vy: 5, mass: 1, color: 'red'})\n        break;\n    }\n    this.setInitBallInfoState()\n  }\n  stopStart = (e) => {\n    this.setState({running: !this.state.running}, () => {\n      this.worker.postMessage({type: 'running', info: this.state.running, animationInfo: this.state.animationInfo})\n      if (!this.state.running) {\n        this.worker.terminate()\n        this.worker = new MyWorker()\n        this.worker.addEventListener('message', event => {\n          this.setState({\n            animationInfo: event.data,\n            awaitingData: false,\n          })\n        })\n      }\n    })\n  }\n\n  handleDragDrop = (e, idx) => {\n    this.setState({allowDragging: false})\n    // let ballData = this.state.animationInfo[idx]\n    this.balls.updateBallData(this.state.animationInfo)\n    this.balls.editBallLocation(idx, e)\n    let data = this.balls.getBalls()\n    this.setState({animationInfo: data, initPositions: [...data]})\n    this.setInitBallInfoState()\n  }\n\n  handleVectorDrag = (e, idx) => {\n    this.setState({ allowDragging: false })\n    this.balls.editBallVelocity(idx, e)\n    let data = this.balls.getBalls()\n    this.setState({ animationInfo: data, initPositions: [...data]})\n  }\n\n  resetPositionsToInit = () => {\n    this.balls.resetBallLocations(this.state.initPositions)\n    this.setState({animationInfo: [...this.state.initPositions]})\n  }\n\n  setInitBallInfoState = () => {\n    let data = this.balls.getBalls()\n    this.setState({animationInfo: data, initPositions: [...data]})\n  }\n  toggleTraces = (e) => {\n    this.setState({traces: !this.state.traces})\n  }\n  handleChangeMass = (e) => {\n    let newMass = e.target.valueAsNumber\n    let idx = parseInt(e.target.id[e.target.id.length - 1])\n    if ( typeof newMass === 'number' && newMass > 0) {\n      this.balls.changeMass(newMass, idx)\n      let data = this.balls.getBalls()\n      this.setState({ animationInfo: data, initPositions: [...data]})\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <GravCanvas\n          locations={this.state.animationInfo}\n          running={this.state.running}\n          traces={this.state.traces}\n          allowDragging={this.state.allowDragging}\n          handleDragDrop={this.handleDragDrop}\n          handleVectorDrag={this.handleVectorDrag}\n          handleVectorDown={this.handleVectorDown}/>\n        <RightSide\n          running={this.state.running}\n          startHandler={this.stopStart}\n          selectNumberBalls={this.selectNumberBalls}\n          animationInfo={this.state.animationInfo}\n          toggleTraces={this.toggleTraces}\n          reset={this.resetPositionsToInit}\n          handleChangeMass={this.handleChangeMass}/>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default GravitySim\n","import Canvas from \"./GravitySim\";\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\" style={{display: 'flex', flexDirection: 'row', height: '98vh'}}>\n      <div id='canvasContainer' style={{ display: 'flex', flexDirection: 'row', width: '100%', marginTop: 10, marginLeft: 10, marginBottom: 10, minHeight: '100%'}}>\n        <Canvas/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}